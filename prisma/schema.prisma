generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
  PARENT
  ADMIN
}

model User {
  id           String   @id @default(cuid())
  role         Role     @default(STUDENT)
  displayName  String?
  orgId        String?
  aiAllowed    Boolean  @default(false)
  settings     Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  UserFacts    UserFact[]
  Sessions     Session[]
  Badges       Badge[]
}

model Fact {
  id           String @id @default(cuid())
  a            Int
  b            Int
  op           String
  commutesWith String?
}

model UserFact {
  id            String   @id @default(cuid())
  userId        String
  factId        String
  masteryLevel  Int      @default(0)
  streak        Int      @default(0)
  easiness      Float    @default(2.5)
  intervalDays  Float    @default(0)
  dueAt         DateTime @default(now())
  lastLatencyMs Int?
  lastAccuracy  Float?
  @@unique([userId, factId])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  mode      String
  startedAt DateTime @default(now())
  endedAt   DateTime?
  accuracy  Float?
  score     Int?
}

model Attempt {
  id        String   @id @default(cuid())
  sessionId String
  factId    String
  correct   Boolean
  latencyMs Int
  hintUsed  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Badge {
  id        String   @id @default(cuid())
  userId    String
  type      String
  awardedAt DateTime @default(now())
}


